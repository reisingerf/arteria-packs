version: "2.0" # mistral version
name: arteria.umccr_test
description: Rsyncs a runfolder from the cache machine to the compute machine and kicks off the bcl2fastq converstion.

workflows:
  main:
    type: direct
    input:
      - runfolder
      - runfolder_name
      - source_host
      - destination_host
      - destination_path
    output:
      output_the_whole_workflow_context: <% $ %>

    tasks:
      ### GENERAL TASKS START ###
      note_workflow_repo_version:
        action: core.local
        input:
          cmd: git rev-parse HEAD
          cwd: /opt/stackstorm/packs/arteria/
        on-success:
           - print_runfolder
      ### GENERAL TASKS END ###

      print_runfolder:
        action: core.local
        input:
          cmd: 'echo "Runfolder ready <% $.runfolder %>"'
        on-success:
          - rsync_to_destination

      rsync_to_destination:
        action: core.remote
        input:
          cmd: 'rsync -avzh <% $.runfolder %> <% $.destination_host %>:<% $.destination_path %>'
          hosts: <% $.source_host %>
        on-success:
          - bcl2fastq_conversion

      bcl2fastq_conversion:
        action: core.http
        input:
          url: 'http://<% $.destination_host %>:8888/api/1.0/start/<% $.runfolder_name %>'
          body: '{"additional_args": "--sleep_time 200 --ignore-missing-bcls --ignore-missing-filter --ignore-missing-positions --ignore-missing-controls"}'
          method: "POST"
        publish:
          bcl2fastq_job: <% task(bcl2fastq_conversion).result.body.job_id %>
        on-success:
          - bcl2fastq_status

      bcl2fastq_status:
        action: core.http
        input:
          url: 'http://<% $.destination_host %>:8888/api/1.0/status/<% $.bcl2fastq_job %>'
          method: "GET"
        # retry:
        #   count: 10
        #   delay: 10
        #   break-on: <% task(bcl2fastq_status).result.body.state = 'done' %>
        #   continue-on: <% task(bcl2fastq_status).result.body.state != 'done' %>
        publish:
          bcl2fastq_status: <% task(bcl2fastq_status).result.body.state %>
        on-success:
          - bcl2fastq_status: <% _.bcl2fastq_status != 'done' %>
          - freport_final_result: <% _.bcl2fastq_status = 'done' %>

      report_final_result:
        action: core.local
        input:
          cmd: echo "<% $.bcl2fastq_status %>"
